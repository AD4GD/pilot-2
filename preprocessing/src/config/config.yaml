# !DO NOT REMOVE keys, just assign 'null' if needed

## INPUT DATASETS

# land-use/land-cover (GeoTIFF)
lulc: 'lulc_albera_ext_concat_{year}.tif' # ESA dataset: 'lulc_esa_{year}.tif'. NE Catalonia: 'lulc_ext_concat_upd_{year}.tif'
# yearstamp of raster dataset to be enriched with vector data. This can also be a list of years (e.g. [2017, 2018, 2019])
year: 2017
# LULC codes of corresponding vector data (all parameters are optional)
lulc_codes:
    lulc_road: 4 # corresponding LULC code ('built area'). ESA dataset: 7.  NE Catalonia: 4
    lulc_railway: 4 # ESA dataset: 7.  NE Catalonia: 4
    lulc_water: 2 # ESA dataset: 1.  NE Catalonia: 2
    
# landscape impedance based on LULC dataset
impedance_tif: 'impedance_lulc_albera_ext_concat_{year}.tif' # added 'impedance_' prefix. For ESA dataset: 'impedance_lulc_esa_{year}.tif'.  NE Catalonia: 'impedance_lulc_ext_concat_upd_{year}.tif'
# input auxiliary csv data (reclassification table)
impedance: 'lulc_descr_albera.csv' # to fetch table with LULC types mapping with impedance values. For ESA dataset: 'lulc_descr_esa.csv'. NE Catalonia: 'lulc_descr_albera.csv'

# vector data
osm_data: 'osm_merged_{year}.gpkg' # derived from Open Street Map
osm_roads: 
    highway: [way,"~",motorway|trunk|primary|secondary|tertiary]
osm_railways: 
    railway: [way,"~",rail|light_rail|narrow_gauge|tram|preserved]
osm_waterways: 
    waterway: [way,"~",river|canal|flowline|tidal_channel]
    water: [way,"~",river|canal]
osm_waterbodies: 
    natural: [nwr,"=",water]
    water: [nwr,"~",cenote|lagoon|lake|oxbow|rapids|river|stream|stream_pool|canal|harbour|pond|reservoir|wastewater|tidal|natural]
    landuse: [nwr,"=",reservoir]
    waterway: [nwr,"=",riverbank]

overpass_filter_roads: type:way and (highway in (motorway, motorway_link, trunk, trunk_link, primary, primary_link, secondary, secondary_link, tertiary, tertiary_link))
overpass_filter_railways: type:way and (railway in (rail, light_rail, narrow_gauge, tram, preserved))
overpass_filter_waterways: type:way and (waterway in (river, canal, flowline, tidal_channel))
overpass_filter_waterbodies: natural=water or (water in (cenote, lagoon, lake, oxbow, rapids, river, stream, stream_pool, canal, harbour, pond, reservoir, wastewater, tidal, natural)) or (landuse=reservoir) or (waterway=riverbank)
overpass_filter_vineyards: landuse=vineyard

user_vector: null # derived from other sources and provided by users ('null' by default)

## PATHS TO DIRECTORIES
# recommended to leave as default
case_study_dir: 'data/case_study_albera' # prefix (directory name) for the case study's input and output files#
# when case studies share the same LULC file, but different impedance files (e.g. 'turtle' and 'bird') we can use the parameter below to get each impedance file
sub_case_study: '' # LEAVE EMPTY if there is no sub-case study. Otherwise, specify the sub-case study name (e.g. 'turtle')
lulc_dir: 'data/shared/input/lulc'
vector_dir: 'input/vector'
impedance_dir: 'input/impedance'
stressors_dir: 'output/stressors'

## 1st component
# Protected Planet API
token: "" # replace with your token
marine: false # 'false' by default to bring marine protected areas or not. warning: being transformed into 'False' in URI, but recognised as a boolean value. Does not cause issues.
api_countries: true # 'true' by default. Brings codes of countries intersecting with input raster dataset. Otherwise, user must specify list of countries as ISO3 codes.
api_url: 'https://api.protectedplanet.net/v3/protected_areas/search?token={token}&country={country}&marine={marine}&with_geometry=true&per_page=50' # API URL
# Parameters to update the impedance datasets
lulc_reclass_table: false # 'false' (use the effect of protected areas) or 'true' (use the reclassification table)
pa_effect: 0.3 # positive effect of protected areas on landscape impedance (for example, if landscape impedance of non-protected grasslands is 10, it will be 3 for protected grasslands)

## 2nd component
# OSM buffering (might be any value, but integer is recommended)
width_lev1: 30 # roads: 'motorway', 'motorway_link', 'trunk', 'trunk_link'
width_lev2: 20 # roads: 'primary', 'primary_link', 'secondary', 'secondary_link'
width_other: 10 # other roads and other layers (railways)

## 3rd component
# matching OSM categories with LULC types
user_matching: 'true' # 'true' by default. 'false' triggers text-matching subtool searching over the definitions of LULC types